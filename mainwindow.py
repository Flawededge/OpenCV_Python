# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_OpenCVThresholder(object):
    def setupUi(self, OpenCVThresholder):
        OpenCVThresholder.setObjectName("OpenCVThresholder")
        OpenCVThresholder.setWindowModality(QtCore.Qt.NonModal)
        OpenCVThresholder.setEnabled(True)
        OpenCVThresholder.resize(947, 678)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(OpenCVThresholder.sizePolicy().hasHeightForWidth())
        OpenCVThresholder.setSizePolicy(sizePolicy)
        OpenCVThresholder.setSizeGripEnabled(False)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(OpenCVThresholder)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.imageStuff = QtWidgets.QHBoxLayout()
        self.imageStuff.setObjectName("imageStuff")
        self.Input = QtWidgets.QGroupBox(OpenCVThresholder)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Input.sizePolicy().hasHeightForWidth())
        self.Input.setSizePolicy(sizePolicy)
        self.Input.setMinimumSize(QtCore.QSize(50, 100))
        self.Input.setObjectName("Input")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.Input)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.inImage = QtWidgets.QLabel(self.Input)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inImage.sizePolicy().hasHeightForWidth())
        self.inImage.setSizePolicy(sizePolicy)
        self.inImage.setMinimumSize(QtCore.QSize(0, 0))
        self.inImage.setScaledContents(True)
        self.inImage.setObjectName("inImage")
        self.horizontalLayout_2.addWidget(self.inImage)
        self.imageStuff.addWidget(self.Input)
        self.Output = QtWidgets.QGroupBox(OpenCVThresholder)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Output.sizePolicy().hasHeightForWidth())
        self.Output.setSizePolicy(sizePolicy)
        self.Output.setMinimumSize(QtCore.QSize(50, 100))
        self.Output.setObjectName("Output")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.Output)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.outImage = QtWidgets.QLabel(self.Output)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.outImage.sizePolicy().hasHeightForWidth())
        self.outImage.setSizePolicy(sizePolicy)
        self.outImage.setMinimumSize(QtCore.QSize(0, 0))
        self.outImage.setScaledContents(True)
        self.outImage.setObjectName("outImage")
        self.horizontalLayout_3.addWidget(self.outImage)
        self.imageStuff.addWidget(self.Output)
        self.verticalLayout_2.addLayout(self.imageStuff)
        self.groupBox = QtWidgets.QGroupBox(OpenCVThresholder)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.userStuff = QtWidgets.QFormLayout()
        self.userStuff.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.userStuff.setObjectName("userStuff")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.userStuff.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.File = QtWidgets.QHBoxLayout()
        self.File.setObjectName("File")
        self.bLoad = QtWidgets.QPushButton(self.groupBox)
        self.bLoad.setObjectName("bLoad")
        self.File.addWidget(self.bLoad)
        self.bSave = QtWidgets.QPushButton(self.groupBox)
        self.bSave.setObjectName("bSave")
        self.File.addWidget(self.bSave)
        self.bMeme = QtWidgets.QPushButton(self.groupBox)
        self.bMeme.setObjectName("bMeme")
        self.File.addWidget(self.bMeme)
        self.userStuff.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.File)
        self.verticalLayout.addLayout(self.userStuff)
        self.verticalLayout_2.addWidget(self.groupBox)

        self.retranslateUi(OpenCVThresholder)
        QtCore.QMetaObject.connectSlotsByName(OpenCVThresholder)

    def retranslateUi(self, OpenCVThresholder):
        _translate = QtCore.QCoreApplication.translate
        OpenCVThresholder.setWindowTitle(_translate("OpenCVThresholder", "Assignment 3"))
        self.Input.setTitle(_translate("OpenCVThresholder", "Input Image"))
        self.inImage.setText(_translate("OpenCVThresholder", "No Image Loaded"))
        self.Output.setTitle(_translate("OpenCVThresholder", "Output Image"))
        self.outImage.setText(_translate("OpenCVThresholder", "No Image Loaded"))
        self.groupBox.setTitle(_translate("OpenCVThresholder", "Controls"))
        self.label.setText(_translate("OpenCVThresholder", "File Controls"))
        self.bLoad.setText(_translate("OpenCVThresholder", "Load"))
        self.bSave.setText(_translate("OpenCVThresholder", "Save"))
        self.bMeme.setText(_translate("OpenCVThresholder", "Meme"))

